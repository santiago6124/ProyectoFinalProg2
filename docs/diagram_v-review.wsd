@startuml

class Tablero {
    - [][] coordenadas: Coordenada
    - n : int // tama単o del tablero
    - Tablero(int size) : constructor
        '   -> inicializa objetos Coordenada en coordenadas
    - mostrarTablero() : void
        '   -> mostrarTablero: imprime el tablero, validando: coord.getBarco(), coord.isTocado()
    - colocarBarco(int x, int y, Barco) : void
        '   -> Coordenas.setBarco, 多多多 barco.agregarCoordenada ???
    - atacar(int x, int y) : bool
        '   -> Coordenas.setBarco, coord.setTocado(true), coord.getBarco()->recibirGolpe()
}

class Coordenada {
    - letra : str
    - numero : int
    - Barco: Barco, default=null
    - tocado : bool, default=false
    - getLetra() : str
    - getNumero() : int
    - isTocado() : bool
    - getBarco() : Barco
    - setBarco(Barco) : void
    - setTocado() : void
}

Tablero "1" o-- "0..*" Coordenada

class Barco {
    - longitud : int //n coordenadas que ocupa
    - horizontal : bool // orientacion
    - hundido : bool, default=false
    - contGolpes : int, default=0
    - Barco(int longitud, bool horizontal) : constructor
        '   -> longitud_, horizontal_
    - verificarHundido() : bool // contGolpes == longitud ?
        '   -> return contGolpes == longitud
    - recibirGolpe() : void
        '   -> contGolpes++, validar si hundido asignar = true
    - getLongitud() : int
        '   -> return longitud
    - isHorizontal() : bool
        '   -> return horizontal
    - isHundido() : bool
        '   -> return hundido

}

Coordenada "1" o-- "0..*" Barco

class Jugador {
    - nombre : str
    - tablero : Tablero
    ' - [] barcos : Barco
    ' - [] disparos : Coordenada
    - getNombre() : str
    - getTablero() : Tablero
}

class Usuario {
}

class Maquina {
}

Usuario --|> Jugador
Maquina --|> Jugador

Jugador "1" o-- "1" Tablero

class Juego {
    - jugador1: Jugador
    - jugador2: Jugador
    + jugar()
}

Juego "1" o-- "1" Jugador

@enduml